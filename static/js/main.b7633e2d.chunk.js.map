{"version":3,"sources":["components/status-addon/data-table/data.table.component.jsx","shared/data.js","redux/root.state.js","redux/app-reducer/app.reducer.types.js","redux/app-reducer/app.reducer.js","redux/root.reducer.js","redux/root.store.js","redux/app-reducer/app.reducer.utils.js","redux/app-reducer/app.reducer.actions.js","components/button/button.component.jsx","components/title/title.component.jsx","components/header/header.component.jsx","components/body/content-card/content-card.component.jsx","components/body/body.component.jsx","components/footer/footer.component.jsx","components/barcode-reader/barcode.reader.component.jsx","components/container/container.component.jsx","components/status-addon/date-picker/date.picker.component.jsx","components/status-addon/request-drawer/request.drawer.component.jsx","components/status-addon/status-card/status.card.component.jsx","components/status-addon/container/container.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["getAppReducerData","appData","userLang","slice","appName","backendLocation","window","location","protocol","hostname","pathname","connectioErrorTxt","msgTitle","errorTxt","configTxt","noDataWarningResp","connectionCheckRespond","errorMsg","configAddress","initialRequest","isResponseEmpty","response","tableHeaderLanguages","machineName","machineStatus","detailsHistory","statusDate","machineStatusDetails","affectedComponents","startDate","endDate","requestBtn","successResponFromServer","appWindowBtn","nameIE","name","color","classes","btnType","oppositBtnName","oppositBtnNameIE","appResetBtn","appContentCard","id","header","action","image","textContent","textBlockStyles","backgroundColor","barcodeMsg","barcodeColors","ok","nok","machineStatusArray","appAuthor","contactLink","authorName","navigator","language","userLanguage","INITIAL_STATE","CHANGE_APP_WINDOW_MODE","UPDATE_MACHINE_STATUS_ARRAY","RESET_MACHINE_STATUS_ARRAY","DB_CONNECTION_TEST","GET_DATA_FROM_API","GET_STATISTIC_FROM_API","appReducer","state","type","payload","detailedStatisticFromAPI","rootReducer","combineReducers","store","createStore","changeAppWindowMode","btnChangeAppWindow","newBtnToReturn","document","documentMode","opener","open","close","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","top","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","body","HandleBarcodeScan","statusArray","barcodeData","backendAPI","FalseRotateCard","groupToChange","getElementsByClassName","i","length","style","transition","transform","SendRequest","APIrequest","dataToSend","fetch","JSON","stringify","then","res","json","InsertionRespond","catch","error","mainElement","getElementById","messageBlock","display","setTimeout","machineDataObj","inputData","barcodeString","split","barcodeBlockColor","toUpperCase","getAttribute","blockId","replace","toLowerCase","substring","blockImage","MakeCardObj","cardID","cardColor","blockStatus","elementToChange","cardRotateDegre","RotateCard","arrayToExport","arrayToCheck","newObject","insertNextObject","push","UpdateStatusArray","sort","a","b","arrayToProcess","resultColor","resultArray","map","el","toString","includes","PrepareArrayForBackend","CheckDBConnection","respond","GetInitialData","CheckDBConnectionAction","getState","connect","dispatch","changeAppWindow","item","ResetBarcodeStatusArray","btnName","isIE","className","onClick","TitleComponent","title","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","marginTop","margin","headerElements","marginBottom","Grid","container","xs","Typography","ContentCard","blockElement","textBlock","height","overflow","Card","Paper","elevation","CardContent","component","alt","src","zeroMinWidth","href","updateMachineStatusArray","insertedValue","apiLocation","autoFocus","onKeyUp","e","keyCode","value","DisplayError","errorRespond","warningBlock","innerHTML","Fragment","CssBaseline","NoSsr","Box","p","bgcolor","variant","Container","maxWidth","focus","IconButton","Link","to","useRowStyles","borderBottom","Row","props","row","React","useState","setOpen","TableRow","TableCell","size","scope","align","status","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","Table","TableHead","TableBody","history","historyRow","date","justifyContent","img","index","DataTableComponent","rows","data","dataSubArr","insert_date","machine_status","imgs_src","statusData","dataObj","machine_status_overall","TableContainer","borderCollapse","flexWrap","textField","marginLeft","marginRight","width","DatePickersComponent","noValidate","TextField","idLable","label","defaultValue","yyyy","getFullYear","mm","getMonth","dd","getDate","mmChars","ddChars","ConvertDate","InputLabelProps","shrink","list","fullList","opacity","button","GetStatisticFromAPI","useEffect","DatesForAPIReq","lastmonth","today","GetMachineDetails","Date","setDate","setMonth","timePeriod","axios","post","dataArr","Object","entries","DateLabels","left","bottom","right","setState","toggleDrawer","anchor","event","key","clsx","role","SendUserReq","datesArr","Button","Drawer","onClose","endIcon","minHeight","avatar","fontSize","modal","alignItems","background","boxShadow","shadows","initialResponseArr","count","setCount","modalData","setModalData","RotateCards","DisplayAllert","ConvertTimestampToDate","timestamp","dateVar","ConvertTimestampToTime","timeVar","ReturnMachineStatus","statusArr","result","handleOpen","CardHeader","Avatar","textShadow","UpdateItemForModal","titleTypographyProps","subheaderTypographyProps","machine_name","subheader","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","borderRadius","flexDirection","color_codes","GetDataFromAPI","App","basename","StatusContainer","exact","path","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b7633e2d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport \"./data.table.component.scss\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    }\n  },\n});\n\nlet getAppReducerData;\n\nfunction createData(statusData) {\n  return {\n    name: statusData.name,\n    status: statusData.status,\n    history: statusData.history,\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"center\">{row.status}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                { getAppReducerData.tableHeaderLanguages.detailsHistory }\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>{getAppReducerData.tableHeaderLanguages.statusDate}</TableCell>\n                    <TableCell align=\"left\">{getAppReducerData.tableHeaderLanguages.machineStatusDetails}</TableCell>\n                    <TableCell align=\"center\">{getAppReducerData.tableHeaderLanguages.affectedComponents}</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell align=\"left\">{historyRow.status}</TableCell>\n                      <TableCell \n                        style={{ justifyContent: \"center\" }} \n                        align=\"center\"\n                      >\n                        {historyRow.img.map((value, index) => (\n                        <img className=\"affected_block--img\" key={index} src={value} alt=\"affected_component\" />\n                      ))}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    status: PropTypes.string.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        img: PropTypes.array.isRequired,\n        status: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired\n  }).isRequired,\n};\n\nconst DataTableComponent = ({...appReducer}) => {\n  getAppReducerData = appReducer;\n  const rows = [];\n  appReducer.detailedStatisticFromAPI.map((data) => {\n    const dataSubArr = [];\n    data[1].insert_date.map((value, index) => {\n      return dataSubArr.push({\n        date: value,\n        status: data[1].machine_status[index],\n        img: data[1].imgs_src[index]\n      })\n    });\n    \n    const dataObj = {\n      name: data[0],\n      status: data[1].machine_status_overall[0],\n      history: dataSubArr\n    };\n    \n    return (rows.push(createData(dataObj)))\n  });\n  //console.log(dataToSend);\n\n  /*appReducer.detailedStatisticFromAPI.map((data) => {\n    return (rows.push(createData(data)))\n  });*/\n  return (\n    <TableContainer component={Paper}>\n      <Table style={{ borderCollapse: 'unset' }}>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            {/*<TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>*/}\n            <TableCell align=\"left\">{appReducer.tableHeaderLanguages.machineName}</TableCell>\n            <TableCell align=\"center\">{appReducer.tableHeaderLanguages.machineStatus}</TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default DataTableComponent;\n","const userLang = navigator.language || navigator.userLanguage; // Find user's locale\n\n// Determine user's locale and give back object with appropriate language\nconst appData = (userLang) => {\n  switch (userLang.slice(0, 2)) {\n    case \"en\":\n      return {\n        appName: \"Komax machine status check\",\n        // please delete /projectflags/ before make production build\n        backendLocation:\n          /*window.location.protocol +\n          \"//\" +\n          window.location.hostname +\n          //window.location.pathname +\n          \"/projectflags/backend/index.php\",*/\n          window.location.protocol +\n          \"//\" +\n          window.location.hostname +\n          window.location.pathname +\n          \"backend/index.php\",\n        connectioErrorTxt: {\n          msgTitle: \"Something was wrong\",\n          errorTxt: \"Please contact your system administrator to fix error: \",\n          configTxt: \"There is configuration issue on: \"\n        },\n        noDataWarningResp: {\n          errorTxt: \"The database is empty\",\n          configTxt: \"Please make some data scanning and try again\"\n        },\n        connectionCheckRespond: {\n          errorMsg: \"\",\n          configAddress: \"\"\n        },\n        initialRequest: {\n          isResponseEmpty: true,\n          response: []\n        },\n        tableHeaderLanguages: {\n          machineName: \"Machine name\",\n          machineStatus: \"Machine status overall\",\n          detailsHistory: \"History\",\n          statusDate: \"Date\",\n          machineStatusDetails: \"Status\",\n          affectedComponents: \"Affected Components\",\n          startDate: \"Start date\",\n          endDate: \"End date\",\n          requestBtn: \"Request\"\n        },\n        successResponFromServer: \"Success\",\n        appWindowBtn: {\n          nameIE: \"Close window\",\n          name: \"To fullscreen\",\n          color: \"#757575\",\n          classes: \"btn btn--color btn--moveRight\",\n          btnType: \"windowCtrButton\",\n          oppositBtnName: \"To small screen\",\n          oppositBtnNameIE: \"Close window\"\n        },\n        appResetBtn: {\n          nameIE: \"Reset results\",\n          name: \"Reset results\",\n          color: \"#26a69a\",\n          classes: \"btn btn--color btn--moveLeft\",\n          btnType: \"appStateCtr\"\n        },\n        appContentCard: [\n          {\n            id: 0,\n            header: \"Wire cutting\",\n            action: \"Check\",\n            image: \"img/img--1.png\",\n            textContent: [\n              \"1. Ceramic the plug for presence and damage\",\n              \"2. Check wire supply sleeve for damage\",\n              \"3. Check the plug for presence and damage\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#ff3d00\",\n              color: \"#fff\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#ff3d00\"\n            }\n          },\n          {\n            id: 1,\n            header: \"Alignment of wire\",\n            action: \"Check\",\n            image: \"img/img--2.png\",\n            textContent: [\n              \"4. Wear belts of the drawing mechanism and rolles\",\n              \"5. Edged blades for presence and damage\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#ff3d00\",\n              color: \"#fff\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#ff3d00\"\n            }\n          },\n          {\n            id: 2,\n            header: \"Wire cutting area\",\n            action: \"Check\",\n            image: \"img/img--3.png\",\n            textContent: [\n              \"6. Ceramic plugs along the wire for presence and damage\",\n              \"7. Ceramic ring for cutting wire near the machine. Presence and damage\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 3,\n            header: \"Crimping area\",\n            action: \"Check\",\n            image: \"img/img--4.png\",\n            textContent: [\n              \"8. Availability and serviceability of wire clamps\",\n              \"9. Cleanliness of crimping stations\",\n              \"10. Cleanliness of seal stations\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 4,\n            header: \"Work area\",\n            action: \"Check\",\n            image: \"img/img--5.png\",\n            textContent: [\n              '11. Readiness of the \"Dino\" microscope',\n              \"12. Readiness of lighting\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 5,\n            header: \"Desktop\",\n            action: \"Check\",\n            image: \"img/img--6.png\",\n            textContent: [\n              \"13. Availability of the tool according to the list\",\n              \"14. Holograms on micrometers and ruler\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          }\n        ],\n        machineStatusArray: [],\n        appAuthor: {\n          contactLink: \"https://www.facebook.com/oddisey000\",\n          authorName: \"Vitalii Pertsovych\"\n        }\n      };\n    case \"uk\":\n      return {\n        appName: \"Пункти перевірки робочого місця\",\n          backendLocation:\n          /*window.location.protocol +\n          \"//\" +\n          window.location.hostname +\n          //window.location.pathname +\n          \"/projectflags/backend/index.php\",*/\n          window.location.protocol +\n          \"//\" +\n          window.location.hostname +\n          window.location.pathname +\n          \"backend/index.php\",\n        connectioErrorTxt: {\n          msgTitle: \"Щось пішло не так\",\n          errorTxt:\n            \"Будь ласка зверніться до системного адміністратора, помилка: \",\n          configTxt: \"Помилка у файлі конфігурації: \"\n        },\n        noDataWarningResp: {\n          errorTxt: \"База даних порожня\",\n          configTxt: \"Будь ласка зіскануйте дані бодай однієї машини\"\n        },\n        connectionCheckRespond: {\n          errorMsg: \"\",\n          configAddress: \"\"\n        },\n        initialRequest: {\n          isResponseEmpty: true,\n          response: []\n        },\n        tableHeaderLanguages: {\n          machineName: \"Назва машини\",\n          machineStatus: \"Загальний результат\",\n          detailsHistory: \"Історія\",\n          statusDate: \"Дата\",\n          machineStatusDetails: \"Стан\",\n          affectedComponents: \"Уражені компоненти\",\n          startDate: \"Початкова дата\",\n          endDate: \"Кінцева дата\",\n          requestBtn: \"Отримати\"\n        },\n        successResponFromServer: \"Успішно\",\n        appWindowBtn: {\n          nameIE: \"Закрити вікно\",\n          name: \"На весь екран\",\n          color: \"#757575\",\n          classes: \"btn btn--color btn--moveRight\",\n          btnType: \"windowCtrButton\",\n          oppositBtnName: \"Віконний режим\",\n          oppositBtnNameIE: \"Закрити вікно\"\n        },\n        appResetBtn: {\n          nameIE: \"Нова перевірка\",\n          name: \"Нова перевірка\",\n          color: \"#26a69a\",\n          classes: \"btn btn--color btn--moveLeft\",\n          btnType: \"appStateCtr\"\n        },\n        appContentCard: [\n          {\n            id: 0,\n            header: \"Нарізання проводу\",\n            action: \"Перевірити\",\n            image: \"img/img--1.png\",\n            textContent: [\n              \"1. Керамічну втулку на наявність і пошкодження\",\n              \"2. Направляючий шланг подачі проводу на пошкодження\",\n              \"3. Направляючі втулки на наявність і пошкодження\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#ff3d00\",\n              color: \"#fff\"\n            },\n            barcodeMsg: \"Відскануйте barcode щоб продовжити\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#ff3d00\"\n            }\n          },\n          {\n            id: 1,\n            header: \"Вирівнювання проводу\",\n            action: \"Перевірити\",\n            image: \"img/img--2.png\",\n            textContent: [\n              \"4. Зношення пасів механізму протягування і роликів\",\n              \"5. Обрізні ножі на наявність і пошкодження\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#ff3d00\",\n              color: \"#fff\"\n            },\n            barcodeMsg: \"Відскануйте barcode щоб продовжити\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#ff3d00\"\n            }\n          },\n          {\n            id: 2,\n            header: \"Нарізання проводу\",\n            action: \"Перевірити\",\n            image: \"img/img--3.png\",\n            textContent: [\n              \"6. Керамічні втулки на протяжці проводу на наявність та пошкодження\",\n              \"7. Керамічне кільце для нарізання проводу біля машини на наявність та пошкодження\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Відскануйте barcode щоб продовжити\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 3,\n            header: \"Кримпування\",\n            action: \"Перевірити\",\n            image: \"img/img--4.png\",\n            textContent: [\n              \"8. Наявність та справність затискачів шпуль\",\n              \"9. Чистоту станцій кримпування\",\n              \"10. Чистоту станцій тулейок\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Відскануйте barcode щоб продовжити\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 4,\n            header: \"Робоча ділянка\",\n            action: \"Перевірити\",\n            image: \"img/img--5.png\",\n            textContent: [\n              '11. Справність мікроскопа \"Діно\"',\n              \"12. Справність освітлення\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Відскануйте barcode щоб продовжити\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 5,\n            header: \"Робочий стіл\",\n            action: \"Перевірити\",\n            image: \"img/img--6.png\",\n            textContent: [\n              \"13. Наявність інструменту згідно переліку\",\n              \"14. Голограми на мікрометрах і лінійці\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Відскануйте barcode щоб продовжити\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          }\n        ],\n        machineStatusArray: [],\n        appAuthor: {\n          contactLink: \"https://www.facebook.com/oddisey000\",\n          authorName: \"Vitalii Pertsovych\"\n        }\n      };\n    default:\n      return {\n        appName: \"Komax machine status check\",\n        // please delete /projectflags/ before make production build\n        backendLocation:\n          /*window.location.protocol +\n          \"//\" +\n          window.location.hostname +\n          //window.location.pathname +\n          \"/projectflags/backend/index.php\",*/\n          window.location.protocol +\n          \"//\" +\n          window.location.hostname +\n          window.location.pathname +\n          \"backend/index.php\",\n        connectioErrorTxt: {\n          msgTitle: \"Something was wrong\",\n          errorTxt: \"Please contact your system administrator to fix error: \",\n          configTxt: \"There is configuration issue on: \"\n        },\n        noDataWarningResp: {\n          errorTxt: \"The database is empty\",\n          configTxt: \"Please make some data scanning and try again\"\n        },\n        connectionCheckRespond: {\n          errorMsg: \"\",\n          configAddress: \"\"\n        },\n        initialRequest: {\n          isResponseEmpty: true,\n          response: []\n        },\n        tableHeaderLanguages: {\n          machineName: \"Machine name\",\n          machineStatus: \"Machine status overall\",\n          detailsHistory: \"History\",\n          statusDate: \"Date\",\n          machineStatusDetails: \"Status\",\n          affectedComponents: \"Affected Components\",\n          startDate: \"Start date\",\n          endDate: \"End date\",\n          requestBtn: \"Request\"\n        },\n        successResponFromServer: \"Success\",\n        appWindowBtn: {\n          nameIE: \"Close window\",\n          name: \"To fullscreen\",\n          color: \"#757575\",\n          classes: \"btn btn--color btn--moveRight\",\n          btnType: \"windowCtrButton\",\n          oppositBtnName: \"To small screen\",\n          oppositBtnNameIE: \"Close window\"\n        },\n        appResetBtn: {\n          nameIE: \"Reset results\",\n          name: \"Reset results\",\n          color: \"#26a69a\",\n          classes: \"btn btn--color btn--moveLeft\",\n          btnType: \"appStateCtr\"\n        },\n        appContentCard: [\n          {\n            id: 0,\n            header: \"Wire cutting\",\n            action: \"Check\",\n            image: \"img/img--1.png\",\n            textContent: [\n              \"1. Ceramic the plug for presence and damage\",\n              \"2. Check wire supply sleeve for damage\",\n              \"3. Check the plug for presence and damage\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#ff3d00\",\n              color: \"#fff\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#ff3d00\"\n            }\n          },\n          {\n            id: 1,\n            header: \"Alignment of wire\",\n            action: \"Check\",\n            image: \"img/img--2.png\",\n            textContent: [\n              \"4. Wear belts of the drawing mechanism and rolles\",\n              \"5. Edged blades for presence and damage\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#ff3d00\",\n              color: \"#fff\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#ff3d00\"\n            }\n          },\n          {\n            id: 2,\n            header: \"Wire cutting area\",\n            action: \"Check\",\n            image: \"img/img--3.png\",\n            textContent: [\n              \"6. Ceramic plugs along the wire for presence and damage\",\n              \"7. Ceramic ring for cutting wire near the machine. Presence and damage\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 3,\n            header: \"Crimping area\",\n            action: \"Check\",\n            image: \"img/img--4.png\",\n            textContent: [\n              \"8. Availability and serviceability of wire clamps\",\n              \"9. Cleanliness of crimping stations\",\n              \"10. Cleanliness of seal stations\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 4,\n            header: \"Work area\",\n            action: \"Check\",\n            image: \"img/img--5.png\",\n            textContent: [\n              '11. Readiness of the \"Dino\" microscope',\n              \"12. Readiness of lighting\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          },\n          {\n            id: 5,\n            header: \"Desktop\",\n            action: \"Check\",\n            image: \"img/img--6.png\",\n            textContent: [\n              \"13. Availability of the tool according to the list\",\n              \"14. Holograms on micrometers and ruler\"\n            ],\n            textBlockStyles: {\n              backgroundColor: \"#f4ff81\",\n              color: \"#000\"\n            },\n            barcodeMsg: \"Scan the barcode to continue\",\n            barcodeColors: {\n              ok: \"#66bb6a\",\n              nok: \"#f4ff81\"\n            }\n          }\n        ],\n        machineStatusArray: [],\n        appAuthor: {\n          contactLink: \"https://www.facebook.com/oddisey000\",\n          authorName: \"Vitalii Pertsovych\"\n        }\n      };\n  }\n};\n\nexport default appData(userLang);\n","import appData from \"../shared/data\";\r\n\r\nconst INITIAL_STATE = {\r\n  ...appData\r\n};\r\n\r\nexport default INITIAL_STATE;\r\n","export const CHANGE_APP_WINDOW_MODE = \"CHANGE_APP_WINDOW_MODE\";\r\nexport const UPDATE_MACHINE_STATUS_ARRAY = \"CREATE_MACHINE_STATUS_ARRAY\";\r\nexport const RESET_MACHINE_STATUS_ARRAY = \"RESET_MACHINE_STATUS_ARRAY\";\r\nexport const DB_CONNECTION_TEST = \"DB_CONNECTION_TEST\";\r\nexport const GET_DATA_FROM_API = \"GET_DATA_FROM_API\";\r\nexport const GET_STATISTIC_FROM_API = \"GET_STATISTIC_FROM_API\";\r\n","import INITIAL_STATE from \"../root.state\";\r\nimport {\r\n  CHANGE_APP_WINDOW_MODE, \r\n  UPDATE_MACHINE_STATUS_ARRAY,\r\n  RESET_MACHINE_STATUS_ARRAY,\r\n  DB_CONNECTION_TEST,\r\n  GET_DATA_FROM_API,\r\n  GET_STATISTIC_FROM_API\r\n} from \"./app.reducer.types\";\r\n\r\nconst appReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_APP_WINDOW_MODE:\r\n      return {\r\n        ...state,\r\n        appWindowBtn: {\r\n          ...state.appWindowBtn,\r\n          name: action.payload.name,\r\n          oppositBtnName: action.payload.oppositBtnName\r\n        }\r\n      };\r\n    case UPDATE_MACHINE_STATUS_ARRAY:\r\n      return {\r\n        ...state,\r\n        machineStatusArray: action.payload\r\n      };\r\n    case RESET_MACHINE_STATUS_ARRAY:\r\n      return {\r\n        ...state,\r\n        machineStatusArray: action.payload\r\n      };\r\n    case DB_CONNECTION_TEST:\r\n      return {\r\n        ...state,\r\n        connectionCheckRespond: action.payload\r\n      };\r\n    case GET_DATA_FROM_API:\r\n      return {\r\n        ...state,\r\n        initialRequest: action.payload\r\n      };\r\n    case GET_STATISTIC_FROM_API:\r\n      return {\r\n        ...state,\r\n        detailedStatisticFromAPI: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","// Imports from global libraries\r\nimport { combineReducers } from \"redux\";\r\n// Imports custom reducers\r\nimport appReducer from \"./app-reducer/app.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  appReducer: appReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./root.reducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport { store };\r\n","export const changeAppWindowMode = (btnChangeAppWindow) => {\r\n  const isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n  let newBtnToReturn;\r\n\r\n  function toggleFullScreen() {\r\n    if (\r\n      !document.fullscreenElement && // alternative standard method\r\n      !document.mozFullScreenElement &&\r\n      !document.webkitFullscreenElement &&\r\n      !document.msFullscreenElement\r\n    ) {\r\n      // current working methods\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen(\r\n          Element.ALLOW_KEYBOARD_INPUT\r\n        );\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.msRequestFullscreen();\r\n      } else if (document.documentElement.msRequestFullscreen) {\r\n        window.top.document.body.msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.cancelFullScreen) {\r\n        document.cancelFullScreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      } else if (document.msExitFullscreen) {\r\n        window.top.document.msExitFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    window.opener = null;\r\n    window.open(\"\", \"_self\");\r\n    window.close();\r\n  };\r\n\r\n  if (isIE) {\r\n    onClose()\r\n    newBtnToReturn = {\r\n      name: btnChangeAppWindow.oppositBtnNameIE,\r\n      oppositBtnName: btnChangeAppWindow.nameIE\r\n    }\r\n  } else {\r\n    toggleFullScreen()\r\n    newBtnToReturn = {\r\n      name: btnChangeAppWindow.oppositBtnName,\r\n      oppositBtnName: btnChangeAppWindow.name\r\n    }\r\n  }\r\n\r\n  return newBtnToReturn;\r\n\r\n};\r\n\r\nexport const HandleBarcodeScan = (statusArray, barcodeData, backendAPI) => {\r\n  const MakeCardObj = (inputData) => {\r\n    const barcodeString = inputData.split('-'); // Split the data into 3 different variables\r\n    /**\r\n     * Check if MachineName-ID-Status pattern was meet\r\n     * Take color attribute from html tag and make card block object\r\n     * If something goes wrong  just return empty object\r\n     */\r\n    if (barcodeString[0] && barcodeString[1] && barcodeString[1] <= 6 && barcodeString[2]) {\r\n      const barcodeBlockColor = barcodeString[2].toUpperCase() === \"OK\" \r\n        ? document.getElementById(barcodeString[1] - 1).getAttribute(\"color--ok\")\r\n        : document.getElementById(barcodeString[1] - 1).getAttribute(\"color--nok\");\r\n      \r\n      const objectToReturn = {\r\n        blockId: barcodeString[1] - 1,\r\n        // Takes all text data, remove spaces and make first letter capitalized then + rest of the string with removed spaces and makes all letters lowercase\r\n        machineName: barcodeString[0].replace(/\\s/g,'')[0].toUpperCase() + barcodeString[0].replace(/\\s/g,'').slice(1).toLowerCase(),\r\n        machineStatus: barcodeString[2].toUpperCase(),\r\n        barcodeBlockColor: barcodeBlockColor.substring(1),\r\n        blockImage: \"img/img--\" + barcodeString[1] + \".png\"\r\n      };\r\n      return objectToReturn;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Take all necessary data for creating animation of barcode block\r\n   * Dinamicaly asign rotate degree based on status value\r\n   */\r\n  const RotateCard = (cardID, cardColor, blockStatus) => {\r\n    const elementToChange = document.getElementById(cardID);\r\n    const cardRotateDegre = blockStatus === \"OK\"\r\n      ? \"rotateY(180deg)\"\r\n      : \"rotateY(360deg)\";\r\n    elementToChange.style.backgroundColor = \"#\" + cardColor;\r\n    elementToChange.style.color = \"#\" + cardColor;\r\n    elementToChange.style.transition = \"all, 1s ease\";\r\n    elementToChange.style.transform = cardRotateDegre;\r\n  };\r\n\r\n  //If user scan something wrong this function will rotate all the barcode elements to its default state\r\n  const FalseRotateCard = () => {\r\n    const groupToChange = document.getElementsByClassName(\"barcode-block\");\r\n    for (var i = 0; i < groupToChange.length; i++) {\r\n      groupToChange[i].style.backgroundColor = \"#fff\";\r\n      groupToChange[i].style.color = \"#000\";\r\n      groupToChange[i].style.transition = \"all, 1s ease\";\r\n      groupToChange[i].style.transform = \"rotateY(0deg)\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Take scanned data array from the state and new object which need to be inserted\r\n   * make helper variable based on wich value new data should be inserted to array or existing data should be updated\r\n   * Check if array already contaigne data with specific sanned barcode ID\r\n   * Update data if ID already present or insert new data\r\n   * If there is no object with specific ID then just push new object into array\r\n   */\r\n  const UpdateStatusArray = (arrayToCheck, newObject) => {\r\n    let insertNextObject = true;\r\n    \r\n    if (arrayToCheck.length > 0) {\r\n      for(let i = 0; i < arrayToCheck.length; i++) {\r\n        if (arrayToCheck[i].blockId === newObject.blockId) {\r\n          arrayToCheck[i] = newObject;\r\n          insertNextObject = false;\r\n          break;\r\n        }\r\n      }\r\n      if (insertNextObject) arrayToCheck.push(newObject);\r\n    } else {\r\n      arrayToCheck.push(newObject);\r\n    }\r\n\r\n    return arrayToCheck;\r\n  };\r\n\r\n  const PrepareArrayForBackend = (arrayToProcess, backendAPI) => {\r\n    let stringifyArrayData;\r\n    let resultArray = [];\r\n    let resultColor;\r\n\r\n    // Get machine status for each step\r\n    stringifyArrayData = arrayToProcess.map(el => el.machineStatus).toString();\r\n    \r\n    if (stringifyArrayData.includes(\"NOK\")) {\r\n      if (arrayToProcess[0].machineStatus === \"NOK\") {\r\n        resultColor = arrayToProcess[0].barcodeBlockColor\r\n      } else if (arrayToProcess[1].machineStatus === \"NOK\") {\r\n        resultColor = arrayToProcess[1].barcodeBlockColor\r\n      } else {\r\n        for (var i = 0; i < arrayToProcess.length; i++) {\r\n          if (arrayToProcess[i].machineStatus === \"NOK\") {\r\n            resultColor = arrayToProcess[i].barcodeBlockColor\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      resultColor = arrayToProcess[0].barcodeBlockColor\r\n    }\r\n\r\n    // Get machine name where scanning procedure done\r\n    resultArray[0] = arrayToProcess[0].machineName;\r\n    resultArray[1] = resultColor;\r\n    resultArray[2] = arrayToProcess.map(el => el.machineStatus).toString();;\r\n    resultArray[3] = arrayToProcess.map(el => el.blockImage).toString();\r\n    resultArray[4] = arrayToProcess.map(el => el.barcodeBlockColor).toString();\r\n\r\n    SendRequest(backendAPI, resultArray);\r\n  };\r\n\r\n  const SendRequest = (APIrequest, dataToSend) => {\r\n    fetch(APIrequest + '?senddata=' + JSON.stringify(dataToSend))\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      //console.log(res);\r\n      InsertionRespond();\r\n    })\r\n    .catch(error => {\r\n      //console.log(error);\r\n    })\r\n  };\r\n\r\n  const InsertionRespond = () => {\r\n    const mainElement = document.getElementById(\"appElements\");\r\n    const messageBlock = document.getElementById(\"success_respond\");\r\n    mainElement.style.display = \"none\";\r\n    messageBlock.style.display = \"block\";\r\n\r\n    setTimeout(() => {\r\n      messageBlock.style.display = \"none\";\r\n      mainElement.style.display = \"block\";\r\n    }, 1000);\r\n  };\r\n\r\n  //Komax203-5-NOK pattern for barcode scanner data\r\n\r\n  //If new object was succesfully created then make card rotation, array filling and return the result\r\n  const machineDataObj = MakeCardObj(barcodeData);\r\n  if (machineDataObj) {\r\n    if (statusArray.length < 1) FalseRotateCard();\r\n    RotateCard(machineDataObj.blockId, machineDataObj.barcodeBlockColor, machineDataObj.machineStatus);\r\n    \r\n    let arrayToExport = UpdateStatusArray(statusArray ? statusArray : [], machineDataObj);\r\n    //console.log(arrayToExport);\r\n    \r\n    arrayToExport.sort((a,b) => (a.blockId > b.blockId) ? 1 : ((b.blockId > a.blockId) ? -1 : 0)); // This simple function will sort array by id\r\n    //console.log(arrayToExport);\r\n    if (arrayToExport.length === 6) {\r\n      PrepareArrayForBackend(arrayToExport, backendAPI);\r\n      arrayToExport = [];\r\n    }\r\n\r\n    return arrayToExport;\r\n  } else {\r\n    FalseRotateCard();\r\n  }\r\n};\r\n\r\nexport const ResetStatusArray = () => {\r\n  const arrayToReturn = [];\r\n  const FalseRotateCard = () => {\r\n    const groupToChange = document.getElementsByClassName(\"barcode-block\");\r\n    for (var i = 0; i < groupToChange.length; i++) {\r\n      groupToChange[i].style.backgroundColor = \"#fff\";\r\n      groupToChange[i].style.color = \"#000\";\r\n      groupToChange[i].style.transition = \"all, 1s ease\";\r\n      groupToChange[i].style.transform = \"rotateY(0deg)\";\r\n    }\r\n  };\r\n\r\n  FalseRotateCard();\r\n  return arrayToReturn;\r\n};\r\n\r\nexport const CheckDBConnection = (APIrequest) => {\r\n  const respond = {\r\n    errorMsg: '',\r\n    configAddress: ''\r\n  };\r\n  const SendRequest = (APIrequest) => {\r\n    fetch(APIrequest)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      respond.configAddress = res[0];\r\n      respond.errorMsg = res[1];\r\n    })\r\n    .catch(error => {\r\n      //console.log(error);\r\n    })\r\n  }\r\n  SendRequest(APIrequest.appReducer.backendLocation);\r\n  \r\n  return respond;\r\n};\r\n\r\nexport const GetInitialData = (APIrequest) => {\r\n  const respond = {\r\n    isResponseEmpty: false,\r\n    response: []\r\n  };\r\n\r\n  const SendRequest = (APIrequest) => {\r\n  fetch(APIrequest)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      //console.log(res);\r\n      respond.response = res;\r\n    })\r\n    .catch(error => {\r\n      //console.log(error);\r\n    })\r\n  }\r\n\r\n  SendRequest(APIrequest.appReducer.backendLocation + \"?getlateststatusdata\");\r\n  \r\n  return respond;\r\n};","import {store} from '../root.store';\r\n\r\nimport {\r\n  CHANGE_APP_WINDOW_MODE, \r\n  UPDATE_MACHINE_STATUS_ARRAY,\r\n  RESET_MACHINE_STATUS_ARRAY,\r\n  DB_CONNECTION_TEST,\r\n  GET_DATA_FROM_API,\r\n  GET_STATISTIC_FROM_API\r\n} from \"./app.reducer.types\";\r\n\r\nimport {\r\n  changeAppWindowMode, \r\n  HandleBarcodeScan,\r\n  ResetStatusArray,\r\n  CheckDBConnection,\r\n  GetInitialData\r\n} from \"./app.reducer.utils\";\r\n\r\nexport const changeAppWindow = (btnChangeAppWindow) => ({\r\n  type: CHANGE_APP_WINDOW_MODE,\r\n  payload: changeAppWindowMode(btnChangeAppWindow)\r\n});\r\n\r\nexport const updateMachineStatusArray = (statusArray, barcodeData, backendAPI) => ({\r\n  type: UPDATE_MACHINE_STATUS_ARRAY,\r\n  payload: HandleBarcodeScan(statusArray, barcodeData, backendAPI)\r\n});\r\n\r\nexport const ResetBarcodeStatusArray = () => ({\r\n  type: RESET_MACHINE_STATUS_ARRAY,\r\n  payload: ResetStatusArray()\r\n});\r\n\r\nexport const CheckDBConnectionAction = () => ({\r\n  type: DB_CONNECTION_TEST,\r\n  payload: CheckDBConnection(store.getState())\r\n});\r\n\r\nexport const GetDataFromAPI = () => ({\r\n  type: GET_DATA_FROM_API,\r\n  payload: GetInitialData(store.getState())\r\n});\r\n\r\nexport const GetStatisticFromAPI = (apiResponse) => ({\r\n  type: GET_STATISTIC_FROM_API,\r\n  payload: apiResponse\r\n});\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./button.component.scss\";\n\nimport {\n  changeAppWindow,\n  ResetBarcodeStatusArray\n} from \"../../redux/app-reducer/app.reducer.actions\";\n\nconst ButtonComponent = ({ changeAppWindow, ResetBarcodeStatusArray, ...btnName }) => {\n  const isIE = /*@cc_on!@*/false || !!document.documentMode;\n  const buttonHandler = () => {\n    btnName.btnType === \"windowCtrButton\" ? changeAppWindow(btnName) : ResetBarcodeStatusArray();\n  };\n\n  return (\n    <button\n      className={btnName.classes}\n      style={{ backgroundColor: btnName.color }}\n      onClick={buttonHandler}\n    >\n      {isIE ? btnName.nameIE : btnName.name}\n    </button>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeAppWindow: (item) => dispatch(changeAppWindow(item)),\n    ResetBarcodeStatusArray: (statusArray) => dispatch(ResetBarcodeStatusArray(statusArray))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ButtonComponent);\n","import React from \"react\";\r\nimport \"./title.component.scss\";\r\n\r\nconst TitleComponent = ({ ...title }) => {\r\n  return <span className=\"title-text uprise\">{title.appName}</span>;\r\n};\r\nexport default TitleComponent;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ButtonComponent from \"../button/button.component\";\r\nimport TitleComponent from \"../title/title.component\";\r\n\r\n//import { changeAppWindow } from \"../../redux/app-reducer/app.reducer.actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    marginTop: theme.spacing(2.5),\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  headerElements: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst HeaderGrid = ({ appData }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs className={classes.headerElements}>\r\n          <ButtonComponent {...appData.appResetBtn} />\r\n        </Grid>\r\n        <Grid item xs className={classes.headerElements}>\r\n          <Typography>\r\n            <TitleComponent {...appData} />\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs className={classes.headerElements}>\r\n          <ButtonComponent {...appData.appWindowBtn} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appData: { ...state.appReducer }\r\n  };\r\n};\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeAppWindow: () => dispatch(changeAppWindow())\r\n  };\r\n};*/\r\n\r\nexport default connect(mapStateToProps)(HeaderGrid);\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport \"./content-card.component.scss\";\n\nconst ContentCard = ({ ...blockElement }) => {\n  const useStyles = makeStyles({\n    textBlock: {\n      backgroundColor: blockElement.textBlockStyles.backgroundColor,\n      color: blockElement.textBlockStyles.color,\n      height: \"23vh\",\n      padding: \".5rem\",\n      marginTop: \"-0.3rem\",\n      margin: \"0.1rem\",\n      overflow: \"auto\"\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <Paper elevation={1}>\n        <p className=\"block-header\">{blockElement.header}</p>\n      </Paper>\n      <Paper elevation={3}>\n        <p className=\"action-call\">{blockElement.action}</p>\n      </Paper>\n      <Paper elevation={3} className={classes.textBlock}>\n        {blockElement.textContent.map((blockElement) => (\n          <p key={blockElement} className=\"text-block\">\n            {blockElement}\n          </p>\n        ))}\n      </Paper>\n\n      <CardContent>\n        <img\n          component=\"img\"\n          className=\"img-property\"\n          alt=\"Komax machine\"\n          src={blockElement.image}\n        />\n      </CardContent>\n      <Paper \n        id={blockElement.id} \n        className=\"barcode-block\" \n        color--ok={blockElement.barcodeColors.ok}\n        color--nok={blockElement.barcodeColors.nok}\n        elevation={3}\n      >\n        <p className=\"barcode-p\">{blockElement.barcodeMsg}</p>\n      </Paper>\n    </Card>\n  );\n};\n\nexport default ContentCard;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport \"./body.component.scss\";\r\n\r\nimport ContentCard from \"./content-card/content-card.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    margin: theme.spacing(0.2)\r\n  }\r\n}));\r\n\r\nconst BodyGrid = ({ appData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        {appData.appContentCard.map((blockElement) => (\r\n          <Grid key={blockElement.id} zeroMinWidth item xs>\r\n            <ContentCard {...blockElement} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appData: { ...state.appReducer }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BodyGrid);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./footer.component.scss\";\n\nconst FooterGrid = ({ appData }) => {\n  return (\n    <span className=\"footer-text splashInBottom\">\n      This application is made by{\" \"}\n      <a\n        className=\"link\"\n        href={appData.appAuthor.contactLink}\n      >\n        {appData.appAuthor.authorName}\n      </a>{\" \"}\n      in Kolomyia.\n    </span>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    appData: { ...state.appReducer }\n  };\n};\n\nexport default connect(mapStateToProps)(FooterGrid);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./barcode.reader.component.scss\";\r\n\r\nimport { updateMachineStatusArray } from \"../../redux/app-reducer/app.reducer.actions\";\r\n\r\nconst BarcodeComponent = ({appReducer, updateMachineStatusArray}) => {\r\n  const handleChange = (e) => {\r\n    if (e.keyCode === 13) {\r\n      const insertedValue = document.getElementById(\"barcode\").value\r\n      updateMachineStatusArray(appReducer.machineStatusArray, insertedValue, appReducer.backendLocation);\r\n      document.getElementById(\"barcode\").value = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        id=\"barcode\"\r\n        autoFocus\r\n        onKeyUp={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appReducer: { ...state.appReducer }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateMachineStatusArray: (machineStatusArray, insertedValue, apiLocation) => dispatch(updateMachineStatusArray(machineStatusArray, insertedValue, apiLocation))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BarcodeComponent);\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { NoSsr, Box } from '@material-ui/core';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport \"@fontsource/roboto\";\r\nimport \"./container.component.scss\";\r\n\r\n// Import components\r\nimport HeaderGrid from \"../header/header.component\";\r\nimport BodyGrid from \"../body/body.component\";\r\nimport FooterGrid from \"../footer/footer.component\";\r\nimport BarcodeComponent from \"../barcode-reader/barcode.reader.component\";\r\n\r\nimport { CheckDBConnectionAction } from \"../../redux/app-reducer/app.reducer.actions\";\r\n\r\nconst AppContainer = ({ appReducer }) => {\r\n  // Check data after reducer received response from server\r\n  setTimeout(() => {\r\n    if (appReducer.connectionCheckRespond.errorMsg) {\r\n      DisplayError(appReducer.connectionCheckRespond);\r\n    }\r\n  }, 3000);\r\n  \r\n  const reSetBarcodeElFocus = () => {\r\n    document.getElementById(\"barcode\").focus();\r\n  };\r\n\r\n  const DisplayError = (errorRespond) => {\r\n    const elementToChange = document.getElementById(\"appElements\");\r\n    const warningBlock = document.getElementById(\"warning_block\");\r\n    elementToChange.style.display = \"none\";\r\n    warningBlock.style.display = \"block\";\r\n\r\n    const isErrorMessageEmpty = document.getElementById(\"errorMsg\").textContent;\r\n    if (!isErrorMessageEmpty) {\r\n      document.getElementById(\"configAddress\").innerHTML = appReducer.connectioErrorTxt.configTxt + errorRespond.configAddress;\r\n      document.getElementById(\"errorMsg\").innerHTML = appReducer.connectioErrorTxt.errorTxt + errorRespond.errorMsg;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <NoSsr>\r\n        <Box p={2} bgcolor=\"secondary.main\" color=\"primary.contrastText\" id=\"warning_block\">\r\n          <Typography variant=\"h5\" component=\"h5\">{appReducer.connectioErrorTxt.msgTitle}</Typography>\r\n          <ul>\r\n            <li className=\"error_list_items\" id=\"errorMsg\"></li>\r\n            <li className=\"error_list_items\" id=\"configAddress\"></li>\r\n          </ul>\r\n        </Box>\r\n        <Box p={2} color=\"primary.contrastText\" id=\"success_respond\">\r\n          {appReducer.successResponFromServer}\r\n        </Box>\r\n      </NoSsr>\r\n      <Container maxWidth=\"xl\" onClick={reSetBarcodeElFocus} id=\"appContainer\">\r\n        <Typography component=\"div\" style={{ height: \"100vh\" }} id=\"appElements\">\r\n          <BarcodeComponent />\r\n          <HeaderGrid />\r\n          <BodyGrid />\r\n          <IconButton id=\"rigth_link_icon\" component={Link} to={'/status'}>\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n          <FooterGrid />\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appReducer: { ...state.appReducer }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    CheckDBConnectionAction: dispatch(CheckDBConnectionAction())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 150,\n  },\n}));\n\nconst DatePickersComponent = ({ ...props }) => {\n  const classes = useStyles();\n\n  const ConvertDate = (date) => {\n    var yyyy = date.getFullYear().toString();\n    var mm = (date.getMonth()+1).toString();\n    var dd  = date.getDate().toString();\n\n    var mmChars = mm.split('');\n    var ddChars = dd.split('');\n\n    return yyyy + '-' + (mmChars[1]?mm:\"0\"+mmChars[0]) + '-' + (ddChars[1]?dd:\"0\"+ddChars[0]);\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id={props.idLable.toLowerCase().replace(/\\s/g, '_')}\n        label={props.data}\n        type=\"date\"\n        defaultValue={ConvertDate(props.date)}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </form>\n  );\n}\n\nexport default DatePickersComponent","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Drawer, IconButton, Button } from '@material-ui/core';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport BackspaceIcon from \"@material-ui/icons/Backspace\";\nimport SendIcon from '@material-ui/icons/Send';\n\nimport \"./request.drawer.component.scss\";\nimport DataTableComponent from '../data-table/data.table.component';\nimport DatePickersComponent from '../date-picker/date.picker.component';\n\nimport { GetStatisticFromAPI } from '../../../redux/app-reducer/app.reducer.actions';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  paper: {\n    padding: \"1rem\",\n    backgroundColor: \"#fafafa\",\n    opacity: .98\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst RequestMenu = ({ appReducer, GetStatisticFromAPI }) => {\n  useEffect(() => {\n    if (!appReducer.detailedStatisticFromAPI) {\n      DatesForAPIReq[0] = ConvertDate(lastmonth);\n      DatesForAPIReq[1] = ConvertDate(today);\n      GetMachineDetails(DatesForAPIReq);\n    }\n  });\n\n  let DatesForAPIReq = [];\n  const today = new Date();\n  let lastmonth = new Date();\n  lastmonth.setDate(1);\n  lastmonth.setMonth(lastmonth.getMonth()-1);\n\n  // Prepare dates, required by API to collect data from DB\n  const ConvertDate = (date) => {\n    var yyyy = date.getFullYear().toString();\n    var mm = (date.getMonth()+1).toString();\n    var dd  = date.getDate().toString();\n\n    var mmChars = mm.split('');\n    var ddChars = dd.split('');\n\n    return yyyy + '-' + (mmChars[1]?mm:\"0\"+mmChars[0]) + '-' + (ddChars[1]?dd:\"0\"+ddChars[0]);\n  }\n\n  const GetMachineDetails = (timePeriod) => {\n    axios.post(appReducer.backendLocation + \"?getstatusreport=\" + JSON.stringify(timePeriod))\n    .then(res => {\n      const dataArr = Object.entries(res.data);\n      GetStatisticFromAPI(dataArr);\n    });\n  };\n\n  const DateLabels = {\n    data: {\n      startDate: {\n        data: appReducer.tableHeaderLanguages.startDate,\n        date: lastmonth,\n        idLable: 'Start date'\n      },\n      endDate: {\n        data: appReducer.tableHeaderLanguages.endDate,\n        date: today,\n        idLable: 'End date'\n      }\n    }\n  };\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      //onClick={toggleDrawer(anchor, false)}\n      //onKeyDown={toggleDrawer(anchor, false)}\n    >\n    </div>\n  );\n\n  // Collect dates which user input into the fields\n  const CollectRequestedPeriod = (startDate, endDate) => {\n    DatesForAPIReq[0] = startDate.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\")\n    DatesForAPIReq[1] = endDate.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\")\n    SendUserReq(DatesForAPIReq)\n  };\n\n  const SendUserReq = (datesArr) => {\n    GetMachineDetails(datesArr)\n  };\n\n  return (\n    <div>\n      {['top'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon /></Button>\n          <Drawer classes={{paper: classes.paper}} anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n            <div id=\"date-request-container\">\n              <div id=\"date-request-form\">\n                <DatePickersComponent { ...DateLabels.data.startDate } />\n                <DatePickersComponent { ...DateLabels.data.endDate } />\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className={classes.button}\n                  endIcon={<SendIcon />}\n                  onClick={() => CollectRequestedPeriod(\n                    document.getElementById(\"start_date\").value,\n                    document.getElementById(\"end_date\").value\n                  )}\n                >\n                  {appReducer.tableHeaderLanguages.requestBtn}\n                </Button>\n              </div>\n              <div>\n                <IconButton onClick={toggleDrawer(anchor, false)}>\n                  <BackspaceIcon />\n                </IconButton>\n              </div>\n            </div>\n            <DataTableComponent {...appReducer} />\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    appReducer: { ...state.appReducer }\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    GetStatisticFromAPI: (data) => dispatch(GetStatisticFromAPI(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestMenu);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Avatar,\n  IconButton,\n  Modal,\n  Backdrop,\n  Fade,\n  Typography,\n  Grid\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nimport \"./status.card.component.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 200,\n    minHeight: 100,\n    marginBottom: \"15px\"\n  },\n  avatar: {\n    fontSize: \".8rem\",\n    backgroundColor: \"\",\n    width: theme.spacing(5),\n    height: theme.spacing(5)\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst StatusCard = ({ appReducer }) => {\n  let initialResponseArr = appReducer.initialRequest.response;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [count, setCount] = useState(0);\n  const [modalData, setModalData] = useState(0);\n\n  if (initialResponseArr.length === 0) {\n    setTimeout(() => {\n      initialResponseArr = appReducer.initialRequest.response;\n      setCount(count + 1);\n    }, 500);\n  }\n\n  setTimeout(() => {\n    RotateCards();\n  }, 1500);\n\n  setTimeout(() => {\n    if (initialResponseArr.length === 0) {\n      DisplayAllert()\n    }\n  }, 2000);\n\n  const ConvertTimestampToDate = (timestamp) => {\n    let dateVar = timestamp.split(/[- :]/);\n    dateVar = dateVar[2] + \"-\" + dateVar[1] + \"-\" + dateVar[0];\n    return dateVar;\n  };\n\n  const ConvertTimestampToTime = (timestamp) => {\n    let timeVar = timestamp.split(/[- :]/);\n    timeVar = timeVar[3] + \":\" + timeVar[4];\n    return timeVar;\n  };\n\n  const ReturnMachineStatus = (statusArr) => {\n    let result = \"OK\";\n    for (let i = 0; i < statusArr.length; i++) {\n      if (statusArr[i] === \"NOK\") {\n        result = statusArr[i];\n        break;\n      }\n    }\n    return result;\n  };\n\n  const RotateCards = () => {\n    const groupToChange = document.getElementsByClassName(\"card_body\");\n    for (var i = 0; i < groupToChange.length; i++) {\n      groupToChange[i].style.transition = \"all, 1s ease\";\n      groupToChange[i].style.transform = \"rotateY(360deg)\";\n    }\n  };\n\n  const DisplayAllert = () => {\n    const elementToChange = document.getElementById(\"appElements\");\n    const warningBlock = document.getElementById(\"warning_block\");\n    elementToChange.style.display = \"none\";\n    warningBlock.style.display = \"block\";\n\n    document.getElementById(\"configAddress\").innerHTML = appReducer.noDataWarningResp.configTxt;\n    document.getElementById(\"errorMsg\").innerHTML = appReducer.noDataWarningResp.errorTxt;\n  };\n\n  const UpdateItemForModal = (item) => {\n    setModalData(item);\n    handleOpen();\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        padding: \"1rem\"\n      }}\n    >\n      {appReducer.initialRequest.response\n        ? appReducer.initialRequest.response.map((item) => (\n            <div key={item.id}>\n              <Card className={classes.root}>\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      className={classes.avatar}\n                      style={{\n                        backgroundColor: \"#\" + item.machine_status_overall,\n                        textShadow: \"0.5px 0.5px 2px #000\"\n                      }}\n                    >\n                      {ReturnMachineStatus(item.machine_status.split(\",\"))}\n                    </Avatar>\n                  }\n                  action={\n                    <IconButton\n                      title={ConvertTimestampToTime(item.insert_date)}\n                      onClick={() => UpdateItemForModal(item)}\n                    >\n                      <InfoIcon />\n                    </IconButton>\n                  }\n                  titleTypographyProps={{ variant: \"caption\" }}\n                  subheaderTypographyProps={{ variant: \"caption\" }}\n                  title={item.machine_name}\n                  subheader={ConvertTimestampToDate(item.insert_date)}\n                />\n                <CardContent\n                  className=\"card_body\"\n                  style={{ backgroundColor: \"#\" + item.machine_status_overall }}\n                ></CardContent>\n              </Card>\n            </div>\n          ))\n        : \"\"}\n        <Modal\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500\n          }}\n        >\n          <Fade in={open}>\n            <div className={classes.paper} style={{opacity: \"0.9\", borderRadius: \".5rem\"}}>\n              <div style={{paddingBottom: \"1rem\"}}>\n              <Grid container style={{justifyContent: \"space-between\" }}>\n                <div style={{display: \"flex\", flexDirection: \"column-reverse\"}}>\n                  <Typography>{modalData ? ConvertTimestampToDate(modalData.insert_date) : \"\"}</Typography>\n                  <Typography>{modalData ? ConvertTimestampToTime(modalData.insert_date) : \"\"}</Typography>\n                </div>\n                <Typography\n                  className=\"title-text-modal\" style={{ fontSize: \"1.5rem\" }}>\n                    {modalData ? modalData.machine_name : \"\"}\n                </Typography>\n              </Grid>\n              </div>\n              <Grid container>\n                {modalData ? modalData.imgs_src.split(\",\").map((img, index) => (\n                  <div key={img} className=\"report_container\">\n                    <img className=\"report_img\" src={img} alt={\"check--\" + img} />\n                    <Grid container className=\"text-content\">\n                      <Typography\n                        className=\"result_text\"\n                        style={{ color: \"#\" + modalData.color_codes.split(\",\")[index] }}\n                      >\n                        {modalData.machine_status.split(\",\")[index]}\n                      </Typography>\n                    </Grid>\n                  </div>\n                )) : \"\"}\n              </Grid>\n            </div>\n          </Fade>\n        </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    appReducer: { ...state.appReducer }\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //updateMachineStatusArray: (machineStatusArray, insertedValue, apiLocation) => dispatch(updateMachineStatusArray(machineStatusArray, insertedValue, apiLocation))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusCard);\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { NoSsr, Box, IconButton } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport \"@fontsource/roboto\";\nimport \"./container.component.scss\";\n\n// Import components\n//import PersistentDrawerLeft from \"../action-drawer/action.drawer.component\";\nimport TitleComponent from \"../../title/title.component\";\nimport MenuDrawer from \"../request-drawer/request.drawer.component\";\nimport StatusCard from '../status-card/status.card.component';\nimport FooterGrid from \"../../footer/footer.component\";\n\nimport { CheckDBConnectionAction, GetDataFromAPI } from \"../../../redux/app-reducer/app.reducer.actions\";\n\nconst StatusContainer = ({ appReducer }) => {\n  // Check data after reducer received response from server\n  setTimeout(() => {\n    if (appReducer.connectionCheckRespond.errorMsg) {\n      DisplayError(appReducer.connectionCheckRespond);\n    }\n  }, 3000);\n\n  const DisplayError = (errorRespond) => {\n    const elementToChange = document.getElementById(\"appElements\");\n    const warningBlock = document.getElementById(\"warning_block\");\n    elementToChange.style.display = \"none\";\n    warningBlock.style.display = \"block\";\n\n    const isErrorMessageEmpty = document.getElementById(\"errorMsg\").textContent;\n    if (!isErrorMessageEmpty) {\n      document.getElementById(\"configAddress\").innerHTML = appReducer.connectioErrorTxt.configTxt + errorRespond.configAddress;\n      document.getElementById(\"errorMsg\").innerHTML = appReducer.connectioErrorTxt.errorTxt + errorRespond.errorMsg;\n    }\n  };\n  \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NoSsr>\n        <Box p={2} bgcolor=\"secondary.main\" color=\"primary.contrastText\" id=\"warning_block\">\n          <Typography variant=\"h5\" component=\"h5\">{appReducer.connectioErrorTxt.msgTitle}</Typography>\n          <ul>\n            <li className=\"error_list_items\" id=\"errorMsg\"></li>\n            <li className=\"error_list_items\" id=\"configAddress\"></li>\n          </ul>\n        </Box>\n        <Box p={2} color=\"primary.contrastText\" id=\"success_respond\">\n          {appReducer.successResponFromServer}\n        </Box>\n      </NoSsr>\n      <Container maxWidth=\"xl\" id=\"appContainer\">\n        <Typography component=\"div\" style={{ height: \"100vh\" }} id=\"appElements\">\n          <div className=\"content\">\n            <Grid style={{padding: \"1rem\"}} container>\n              <Grid item xs container style={{justifyContent: \"flex-start\"}}>\n                <MenuDrawer />\n              </Grid>\n              <Grid item xs>\n                <TitleComponent {...appReducer}/>\n              </Grid>\n              <Grid item xs></Grid>\n            </Grid>\n            <StatusCard />\n          </div>\n          <IconButton id=\"left_link_icon\" component={Link} to={'/'}>\n            <ArrowBackIosIcon />\n          </IconButton>\n          <FooterGrid className=\"footer\" />\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    appReducer: { ...state.appReducer }\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    CheckDBConnectionAction: dispatch(CheckDBConnectionAction()),\n    GetDataFromAPI: dispatch(GetDataFromAPI())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusContainer);\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport AppContainer from \"./components/container/container.component\";\nimport StatusContainer from \"./components/status-addon/container/container.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Switch>\n          <Route component={StatusContainer} exact path=\"/status\"></Route>\n          <Route component={AppContainer} exact path=\"/\"></Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// These must be the first lines in src/index.js added support for old browsers\nimport \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\n// Implement Redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/root.store\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}